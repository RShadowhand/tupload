# =========================================================================
# --------tupload - A tool that uploads text to any "fiche" server.--------
# =========================================================================

# START: Defaults
NOCLIP='false'                 # Change to 'true' if you want -n to be default.
UTIL='cat'                     # Change to "echo" if you want -s (string) to be default, instead of -f (file).
SERVER='server.address.com'    # Add your server address to this.
PORT='9999'                    # And your port to this.
# END: Defaults

# START: Help Output
usage()
{
    cat << EOF
    $1Usage: tupload <FILE> [OPTIONS] [-sv,--server "<ADDRESS> <PORT>"]

    OPTIONS:
    -h, --help       Show this message.
    -s, --string     Input is pure text.
    -f, --file       Input is file (default).
    --server         Change server to "<ADDRESS> <PORT>". Must be at the end.
    -n, --noclip     Print the link. If clipboard cannot be used, this is default.
EOF
}
# END: Help Output

# START: Detect OS
OSTYPE=$(uname -s)
case "$OSTYPE" in
    "CYGWIN"*)  DELIMITER='>'; CLIPBOARD='/dev/clipboard' ;;
    *"Linux"*)  DELIMITER='|'; CLIPBOARD='xclip -selection clipboard'; if ! xclip &> /dev/null; then echo "You don't have X or xclip. Echoing the URL instead."; DELIMITER=''; CLIPBOARD='';fi ;;
    "Darwin"*)  DELIMITER='|'; CLIPBOARD='pbcopy' ;; # OSX
    *)          echo "Can't find your OS type.\nPlease edit the script for your clipboard settings."; exit 1;;
esac
if [[ "$NOCLIP" = 'true' ]]; then DELIMITER=""; CLIPBOARD=""; fi
# END: Detect OS

while [[ $# -gt 0 ]]; do
    opt="$1"
    shift;
    current_arg="$1"
    case "$opt" in
        "-h"|"--help"       ) usage "tupload - A tool that uploads text to any \"fiche\" server."$'\n'"    Copyright (C) 2016  Shadowhand"$'\n'$'\n'"    "; exit;;
        "-f"|"--file"       ) UTIL="cat";;
        "-s"|"--string"     ) UTIL="echo";;
        "-n"|"--noclip"     ) DELIMITER=""; CLIPBOARD="";;
        "--server"          ) SERVER="$1"; PORT="$2"; shift;;
        -*                  ) echo "    ERROR: Invalid option: \""$opt"\"" >&2; usage; exit;;
        *                   ) INPUT="$opt";;
    esac
done

if [[ -z $INPUT ]]; then
    usage "There's no input."$'\n'"    "; # Please don't edit this line :(
    exit 1;
fi

eval "$UTIL $INPUT | nc $SERVER $PORT $DELIMITER $CLIPBOARD"